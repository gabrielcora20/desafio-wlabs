version: "3"
x-wlabs-common:
  &wlabs-common
  restart: on-failure
  ports:
    - "8080"
  environment:
    - "TZ=America/Sao_Paulo"
  depends_on:
    - wlabs-auth
    - mongo-primario
    - elasticsearch
    - redis
  networks:
    - mongo
    - elastic
    - redis
    - wlabs-api-services

services:
  wlabs-usuario:
    container_name: wlabs-usuario
    image: wlabs-usuario
    build:
        context: ./src
        dockerfile: ./Wlabs.Services.Usuario/Dockerfile
    restart: on-failure
    ports:
        - "8100:8100"
    environment:
        - "TZ=America/Sao_Paulo"
    depends_on:
        - mongo-primario
        - elasticsearch
        - redis
    networks:
        - mongo
        - elastic
        - redis
        - wlabs-api-services
    
  wlabs-auth:
    container_name: wlabs-auth
    image: wlabs-auth
    build:
        context: ./src
        dockerfile: ./Wlabs.Services.Auth/Dockerfile
    restart: on-failure
    ports:
        - "8090:8090"
    environment:
        - "TZ=America/Sao_Paulo"
    depends_on:
        - mongo-primario
        - elasticsearch
        - redis
    networks:
        - mongo
        - elastic
        - redis
        - wlabs-api-services

  wlabs-via-cep:
    <<: *wlabs-common
    container_name: wlabs-via-cep
    image: wlabs-via-cep
    build:
        context: ./src
        dockerfile: ./Wlabs.Services.ViaCep/Dockerfile
      
  wlabs-api-cep:
    <<: *wlabs-common
    container_name: wlabs-api-cep
    image: wlabs-api-cep
    build:
        context: ./src
        dockerfile: ./Wlabs.Services.ApiCep/Dockerfile    

  wlabs-awesome-api:
    <<: *wlabs-common
    container_name: wlabs-awesome-api
    image: wlabs-awesome-api
    build:
        context: ./src
        dockerfile: ./Wlabs.Services.AwesomeApi/Dockerfile
 
  wlabs-api-balancer:    
     container_name: wlabs-api
     hostname: wlabs-api
     image: nginx
     restart: always
     ports:
       - "8080:8080"                
     volumes:          
       - ./config/api-balancer:/etc/nginx/conf.d/
     depends_on:
        - wlabs-via-cep
        - wlabs-api-cep
        - wlabs-awesome-api
     networks:
        - wlabs-api-services

  mongo-primario:
    container_name: mongo-primario
    image: 'bitnami/mongodb:latest'
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongo-primario
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_USERNAME=root
      - MONGODB_ROOT_PASSWORD=6HHIV8BNb4*C^3Ad#OV0bsjBipi3&28Z53x*jrLu5UGT@@1j!3
      - MONGODB_REPLICA_SET_KEY=wlabsreplicaset
      - "TZ=America/Sao_Paulo"
    volumes:
      - ./volumes/mongo-primario/data:/bitnami/mongodb/data/db
      - ./config/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
        - mongo

  mongo-secundario:
    container_name: mongo-secundario
    image: 'bitnami/mongodb:latest'
    restart: on-failure
    depends_on:
      - mongo-primario
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongo-secundario
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongo
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=6HHIV8BNb4*C^3Ad#OV0bsjBipi3&28Z53x*jrLu5UGT@@1j!3
      - MONGODB_REPLICA_SET_KEY=wlabsreplicaset
      - "TZ=America/Sao_Paulo"
    volumes:
      - ./volumes/mongo-secundario/data:/bitnami/mongodb/data/db
    networks:
        - mongo

  mongo-arbiter:
    container_name: mongo-arbiter
    image: 'bitnami/mongodb:latest'
    restart: on-failure
    depends_on:
      - mongo-primario
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongo-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongo
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=6HHIV8BNb4*C^3Ad#OV0bsjBipi3&28Z53x*jrLu5UGT@@1j!3
      - MONGODB_REPLICA_SET_KEY=wlabsreplicaset
      - "TZ=America/Sao_Paulo"
    volumes:
      - ./volumes/mongo-arbiter/data:/bitnami/mongodb/data/db
    networks:
        - mongo

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: on-failure
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass dBja9y0cVkcl9Utw009bsSCt1dFAh0JqQ1FORQi7Yod68AXRrn
    volumes: 
      - ./volumes/redis:/data
    networks:
        - redis
  
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    volumes:
        - ./volumes/elasticsearch:/usr/share/elasticsearch/data   
    ports:
        - "9200:9200"
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
        - ELASTICSEARCH_USERNAME=wlabs
        - ELASTICSEARCH_PASSWORD=0V4ZFwxqX9ArHgo3rf8oUXkUmR06OvZaLNkAGIclq58B3zJIek
    networks:
        - elastic
     
  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.3
    container_name: kibana
    ports:
        - "5601:5601"
    depends_on:
        - elasticsearch
    environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200
        - ELASTICSEARCH_USERNAME=wlabs
        - ELASTICSEARCH_PASSWORD=0V4ZFwxqX9ArHgo3rf8oUXkUmR06OvZaLNkAGIclq58B3zJIek
    networks:
        - elastic

networks:
  elastic:
    driver: bridge
  mongo:
    driver: bridge
  redis:
    driver: bridge
  wlabs-api-services:
    driver: bridge